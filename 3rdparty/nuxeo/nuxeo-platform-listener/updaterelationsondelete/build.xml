<project name="org.collectionspace.services.3rdparty.nuxeo.listener.updaterelationsondelete" default="package" basedir=".">
  <description>
    CollectionSpace Nuxeo listener component type
  </description>
  <!-- Set global properties for this build -->
  <property name="services.trunk" value="../../../.."/>
  <!-- Environment should be declared before reading build.properties -->
  <property environment="env" />
  <!-- Set global properties for this build -->
  <property file="${services.trunk}/build.properties" />
  <!-- Set local properties for this build -->
  <property file="build.properties" />
  <property name="mvn.opts" value="-V" />
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>

  <!-- The listener.module.name variable is set in a local properties file -->
  <property name="jar.name"
    value="org.collectionspace.services.listener.${listener.module.name}-${cspace.release}.jar"/>

  <property name="jar.all"
    value="org.collectionspace.services.listener.${listener.module.name}-*.jar"/>
  
  <condition property="osfamily-unix">
    <os family="unix" />
  </condition>
  <condition property="osfamily-windows">
    <os family="windows" />
  </condition>
  
  <target name="init" >
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>
  
  <target name="package" depends="package-unix,package-windows"
    description="Package CollectionSpace Services" />
  <target name="package-unix" if="osfamily-unix">
    <exec executable="mvn" failonerror="true">
      <arg value="package" />
      <arg value="-Dmaven.test.skip=true" />
      <arg value="-f" />
      <arg value="${basedir}/pom.xml" />
      <arg value="-N" />
      <arg value="${mvn.opts}" />
    </exec>
  </target>
  <target name="package-windows" if="osfamily-windows">
    <exec executable="cmd" failonerror="true">
      <arg value="/c" />
      <arg value="mvn.bat" />
      <arg value="package" />
      <arg value="-Dmaven.test.skip=true" />
      <arg value="-f" />
      <arg value="${basedir}/pom.xml" />
      <arg value="-N" />
      <arg value="${mvn.opts}" />
    </exec>
  </target>
  
  <target name="install" depends="install-unix,install-windows"
    description="Install" />
  <target name="install-unix" if="osfamily-unix">
    <exec executable="mvn" failonerror="true">
      <arg value="install" />
      <arg value="-Dmaven.test.skip=true" />
      <arg value="-f" />
      <arg value="${basedir}/pom.xml" />
      <arg value="-N" />
      <arg value="${mvn.opts}" />
    </exec>
  </target>
  <target name="install-windows" if="osfamily-windows">
    <exec executable="cmd" failonerror="true">
      <arg value="/c" />
      <arg value="mvn.bat" />
      <arg value="install" />
      <arg value="-Dmaven.test.skip=true" />
      <arg value="-f" />
      <arg value="${basedir}/pom.xml" />
      <arg value="-N" />
      <arg value="${mvn.opts}" />
    </exec>
  </target>
  
  <target name="deploy" depends="install"
    description="deploy doctype in ${jee.server.nuxeo}">
    <copy file="${basedir}/target/${jar.name}"
      todir="${jee.deploy.nuxeo.plugins}"/>
  </target>
  
  <target name="undeploy"
    description="undeploy doctype from ${jee.server.nuxeo}">
    <delete>
      <fileset dir="${jee.deploy.nuxeo.plugins}">
        <include name="${jar.all}"/>
      </fileset>
    </delete>
  </target>
  
</project>
