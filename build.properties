host=127.0.0.1
#cspace
# Instance IDs help identify the databases and database users that belong to
# a particular CollectionSpace server instance, in a configuration where
# multiple CollectionSpace servers all share a single database server.
# The instance ID is blank by default. If it is added, by convention,
# instance IDs should begin with an underscore (_). E.g.: _trs80

#
# Release version info
#
release.version=8.0.0-SNAPSHOT
cspace.release=${release.version}
cspace.instance.id=${env.CSPACE_INSTANCE_ID}

cspace.services.release=cspace-services-${cspace.release}
domain.cspace=cspace-services
cspace.services.context=${domain.cspace}
cspace.services.war=${cspace.services.context}.war
domain.nuxeo=nuxeo-server

# UI settings
cspace.ui.package.name=cspace-ui
cspace.ui.library.name=cspaceUI
cspace.ui.version=9.0.0-dev.4
cspace.ui.build.branch=master
cspace.ui.build.node.ver=14
service.ui.library.name=${cspace.ui.library.name}-service

#nuxeo
nuxeo.release=9.10-HF30
nuxeo.ear=nuxeo.ear
nuxeo.system=bundles

## #old# nuxeo.plugins=${nuxeo.ear}/plugins
nuxeo.plugins=plugins

## #old#
nuxeo.templates=templates

## #old# distribution
dist=dist
dist.cspace=${dist}/cspace
dist.nuxeo=${dist}/nuxeo
dist.installer=${dist}/installer
dist.installer.services=${dist.installer}/services

## #old# dist cspace domain
dist.domain.cspace=${domain.cspace}
dist.server.cspace=${dist.cspace}/server/${jee.domain.cspace}
dist.deploy.cspace=${dist.server.cspace}/deploy
dist.lib.cspace=${dist.server.cspace}/lib

## #old# dist nuxeo domain
dist.domain.nuxeo=${domain.nuxeo}
dist.server.nuxeo=${dist.nuxeo}/server/${jee.domain.nuxeo}
dist.deploy.nuxeo=${dist.server.nuxeo}/deploy
dist.lib.nuxeo=${dist.server.nuxeo}/lib
dist.deploy.nuxeo.system=${dist.deploy.nuxeo}/${nuxeo.system}
dist.deploy.nuxeo.plugins=${dist.deploy.nuxeo}/${nuxeo.plugins}

#JEE Application Server
jee.release=apache-tomcat-8.5.40
jee.dir=${env.CSPACE_JEESERVER_HOME}
jee.home=${jee.dir}
jee.bin=${jee.home}/bin

#JEE Application Server cspace domain
jee.domain.cspace=${domain.cspace}
jee.domain.cspace.port=${env.JEE_PORT}
jee.server.cspace=${jee.home}
jee.deploy.cspace=${jee.server.cspace}/webapps
jee.server.root=${jee.deploy.cspace}/ROOT
jee.lib.cspace=${jee.server.cspace}/lib
jee.deploy.cspace.services=${jee.deploy.cspace}/${cspace.services.war}
jee.deploy.cspace.ui.shared=${jee.deploy.cspace}/cspace-ui

#JEE Application Server nuxeo domain
jee.domain.nuxeo=${domain.nuxeo}
##old# #jee.domain.nuxeo.port=8080
jee.server.nuxeo=${jee.home}/${jee.domain.nuxeo}
jee.deploy.nuxeo=${jee.server.nuxeo}
jee.lib.nuxeo=${jee.server.nuxeo}/lib
jee.deploy.nuxeo.system=${jee.deploy.nuxeo}/${nuxeo.system}
jee.deploy.nuxeo.plugins=${jee.deploy.nuxeo}/${nuxeo.plugins}

# Apache Tomcat specific variables
catalina.engine=Catalina
catalina.hostname=localhost
catalina.base=${jee.dir}
catalina.context.cspace=${jee.dir}/conf/${catalina.engine}/${catalina.hostname}/${cspace.services.context}.xml

#nuxeo database templates directory
##old# nuxeo.templates.dir=${jboss.home}/${nuxeo.templates}

#nuxeo main config file
nuxeo.main.config.file=${jee.bin}/nuxeo.conf
#nuxeo database templates directory
nuxeo.templates.dir=${jee.home}/${nuxeo.templates}

db.base.dir=${jee.server.cspace}/cspace/services/db

#database - select one or the other (not both!), and then uncomment the
# appropriate section below the common settings
#db=mysql|postgresql
# db=mysql
db=postgresql

#For mysql, uncomment this, and comment out postgres section
# db.port=3306
# db.driver.jar=${db.base.dir}/jdbc_drivers/mysql-connector-java-5.1.7.jar
# db.jdbc.driver.class=com.mysql.jdbc.Driver
# db.dialect=org.hibernate.dialect.MySQLDialect
# db.typemapping=mySQL
# db.exceptionsorter=org.jboss.resource.adapter.jdbc.vendor.MySQLExceptionSorter
# db.spring.acl.classIdentityQuery=SELECT @@IDENTITY
# db.spring.acl.sidIdentityQuery=SELECT @@IDENTITY
# db.xaDataSource=com.mysql.jdbc.jdbc2.optional.MysqlXADataSource

#For postgresql, uncomment this, and comment out mysql section
db.driver.jar=${db.base.dir}/jdbc_drivers/postgresql-42.2.1.jar
db.jdbc.driver.class=org.postgresql.Driver
db.dialect=org.hibernate.dialect.PostgreSQLDialect
db.typemapping=PostgreSQL 8.0
# Should be org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLExceptionSorter
# but current JBoss does not seem to include it...
db.exceptionsorter=
db.spring.acl.classIdentityQuery=select currval(pg_get_serial_sequence('acl_class', 'id'))
db.spring.acl.sidIdentityQuery=select currval(pg_get_serial_sequence('acl_sid', 'id'))
db.xaDataSource=org.postgresql.xa.PGXADataSource

#Hibernate properties for Ant and Maven plugins
hibernate.dialect=${db.dialect}

#database common settings
db.script.dir=${jee.server.cspace}/cspace/services/db/${db}

db.csadmin.name=postgres
db.csadmin.user=csadmin
db.csadmin.user.password=${env.DB_CSADMIN_PASSWORD}

db.nuxeo.name=nuxeo${cspace.instance.id}
db.nuxeo.user=${db.nuxeo.name}
db.nuxeo.user.password=${env.DB_NUXEO_PASSWORD}

db.cspace.name=cspace${cspace.instance.id}
db.cspace.user=${db.cspace.name}
db.cspace.user.password=${env.DB_CSPACE_PASSWORD}

db.reader.user=reader${cspace.instance.id}
db.reader.user.password=${env.DB_READER_PASSWORD}

#db.port=5432
db.port=${env.DB_PORT}

#db.host=localhost
db.host=${env.DB_HOST}
db.jdbc.baseurl=jdbc:${db}://${db.host}:${db.port}

#
# Used for misc Nuxeo services, plugins, and extensions
#
# Single tenant deployments of CollectionSpace, should set this to the datasource name
# in the tenant's datasource config file found in the tomcat7/nuxeo-server/config directory.  For example,
# "jdbc/cinefiles_domain" for the UCB cinefiles deployment.
#
db.jdbc.default.datasource=jdbc/default

#
# JDBC options that can be added to the database URL.  We need to supply an "encoded" version
# of the options for cases where the URL is processed inside of XML scripts/files
#

# Use the following JDBC options to enable CSpace to establish SSL
# connections with the database server.
#
# ssl=true ;means we can talk SSL to the database server
# sslfactory ;set this to the SSL factory class.  The default is to perform validation.  Use NonValidatingFactory class to skip validation
# foo=true ;an extra "throw way" options seems to be needed to prevent parsing errors for some tools/code.

#
# Here is an example of how to set the JDBC options for connecting to an SSL enabled
# PostgreSQL server.
#
#db.jdbc.urloptions=ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory&foo=true
#db.jdbc.urloptions.encoded=ssl=true&amp;sslfactory=org.postgresql.ssl.NonValidatingFactory&amp;foo=true

#
# By default, as placeholders, we'll supply meaningless JDBC options -both encoded and non-encode forms.
#
db.jdbc.urloptions=foo=true&bar=false
db.jdbc.urloptions.encoded=foo=true&amp;bar=false

#
# JDBC urls that CollectionSpace needs to talk to the "admin" database, Nuxeo databases, and the "cspace" database (i.e., the AuthN/AuthZ database)
#
db.jdbc.csadmin.url=${db.jdbc.baseurl}/${db.csadmin.name}?${db.jdbc.urloptions}
db.jdbc.csadmin.url.encoded=${db.jdbc.baseurl}/${db.csadmin.name}?${db.jdbc.urloptions.encoded}

db.jdbc.nuxeo.url=${db.jdbc.baseurl}/${DatabaseName}?${db.jdbc.urloptions}
db.jdbc.nuxeo.url.encoded=${db.jdbc.baseurl}/${DatabaseName}?${db.jdbc.urloptions.encoded}

db.jdbc.cspace.url=${db.jdbc.baseurl}/${db.cspace.name}?${db.jdbc.urloptions}
db.jdbc.cspace.url.encoded=${db.jdbc.baseurl}/${db.cspace.name}?${db.jdbc.urloptions.encoded}
